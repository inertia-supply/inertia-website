{"version":3,"sources":["routes/Lab/Products/Products.tsx","routes/Lab/Products/Product/Product.tsx"],"names":["PoolStatus","RenderImage","image","className","ProductStat","label","value","Product","provider","productId","useParams","useState","productData","setProductData","productDataLoading","setProductDataLoading","poolData","setPoolData","poolDataLoading","setPoolDataLoading","useEffect","productItem","Products","find","product","id","productPools","Pools","filter","pool","pools","includes","to","gutter","lg","span","projectName","ticker","contract","href","explorer","rel","target","truncate","status","supplyType","startTime","format","fromUnixTime","descriptionLong","decimals","map","prefix","pairId","data","size","uniswap_swap","pairToken","uniswap_add","RenderBadge","Active","color","Inactive","Finished","url","columns","key","width","render","record","description","title","PoolsData","setProvider","a","ethers","providers","EtherscanProvider","network","initProvider","dataSource","ProductsData","pagination","rowKey","exact","path"],"mappings":"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","file":"static/js/14.9df1a65d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport { ethers } from 'ethers';\nimport { network, explorer } from '../../../data/constants';\nimport { truncate } from '../../../data/utils';\nimport { TotalSupply, CirculatingSupply, MarketCap } from '../../../components';\nimport ProductsData from '../../../data/products.json';\nimport PoolsData from '../../../data/pools.json';\nimport { Table, Badge } from 'antd';\nimport Product from './Product/Product';\n\nimport { ReactComponent as IconInr } from '../../../components/Assets/Images/icon_inr.svg';\nimport { ReactComponent as IconEs } from '../../../components/Assets/Images/icon_es.svg';\nimport { ReactComponent as IconEi } from '../../../components/Assets/Images/icon_ei.svg';\nimport { ReactComponent as IconGp } from '../../../components/Assets/Images/icon_gp.svg';\nimport { ReactComponent as IconSp } from '../../../components/Assets/Images/icon_sp.svg';\n\nimport './Products.scss';\n\nenum PoolStatus {\n  'Active' = 'Active',\n  'Inactive' = 'Inactive',\n  'Finished' = 'Finished',\n}\n\nconst RenderImage = (image) => {\n  switch(image) {\n    case \"INR\": return <IconInr className=\"ProductsTable__icon\" />;\n    case \"GP\": return <IconGp className=\"ProductsTable__icon\" />;\n    case \"ES\": return <IconEs className=\"ProductsTable__icon\" />;\n    case \"EI\": return <IconEi className=\"ProductsTable__icon\" />;\n    case \"SP\": return <IconSp className=\"ProductsTable__icon\" />;\n    default: return <IconInr className=\"ProductsTable__icon\" />;\n  }\n}\n\nconst RenderBadge = (status) => {\n  switch(PoolStatus[status]) {\n    case PoolStatus.Active: return <Badge color=\"green\" />;\n    case PoolStatus.Inactive: return <Badge color=\"red\" />;\n    case PoolStatus.Finished: return<Badge color=\"orange\" />;\n  }\n}\n\n\nconst Products = ({ url }) => {\n  const columns = [\n    {\n      key: 'product',\n      width: '40%',\n      render: (record) => \n        <div className=\"ProductsTable__product\">\n          <div className=\"ProductsTable__title\">\n            <div className=\"ProductsTable__title__image\">{RenderImage(record.image)}</div>\n            <div className=\"ProductsTable__title__text\">\n              <h5>{record.projectName} ({record.ticker})</h5>\n              {record.contract && \n                <a \n                  href={`${explorer}contract/${record.contract}`} \n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                    {truncate(record.contract, 18, '...')}\n                </a>\n              }\n            </div>\n          </div>\n          <div className=\"ProductsTable__description\">{record.description}</div>\n        </div>\n    },\n    {\n      title: 'Market Cap',\n      key: 'cap',\n      width: '15%',\n      render: (record) => {\n        if (!record.contract) return <>{\"-\"}/{\"-\"}</>\n        const productPools = PoolsData.filter(pool => record.pools.includes(pool.id)).filter(pool => pool.contract).map(pool => pool.contract);\n        return (\n          <MarketCap \n            contract={record.contract}\n            provider={provider}\n            decimals={0}\n            prefix=\"US$\"\n            pools={productPools} \n            pairId={record.pairId}\n          />\n        )\n        }\n    },\n    {\n      title: 'Supply',\n      key: 'supply',\n      width: '20%',\n      render: (record) => {\n        if (!record.contract) return <>{\"-\"}/{\"-\"}</>\n        const productPools = PoolsData.filter(pool => record.pools.includes(pool.id)).filter(pool => pool.contract).map(pool => pool.contract);\n        return (\n          <>\n            <CirculatingSupply contract={record.contract} provider={provider} decimals={0} pools={productPools} />\n            /<TotalSupply contract={record.contract} provider={provider} decimals={0} />\n          </>\n        )\n      }\n    },\n    {\n      title: 'Status',\n      key: 'status',\n      render: (record) => \n        <div>\n          {RenderBadge(record.status)} {PoolStatus[record.status]}\n        </div>\n    },\n    {\n      key: 'action',\n      render: (record) => (\n        <Link to={`/lab/products/${record.id}`} className=\"Btn Btn--primary\">View</Link>\n      ),\n    },\n  ];\n\n  const [provider, setProvider]: [any | null, any] = useState(null);\n\n  useEffect(() => {\n\t\tasync function initProvider() {\n\t\t\tconst provider = new ethers.providers.EtherscanProvider(network, 'WSEBKEYQAFZ8AUGMFAKJR7GPCNYZ9Q3AIE');\n\t\t\tsetProvider(provider);\n\t\t}\n\t\tinitProvider();\n  }, []);\n\n  return (\n    <div className=\"Products\">\n      {provider && <Table columns={columns} dataSource={ProductsData} pagination={false} rowKey=\"ticker\" />}\n      <Route exact path={`${url}/products/:productId`}>\n        {provider && <Product provider={provider} /> }\n      </Route>\n    </div>\n  );\n}\n\nexport default Products;","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { format, fromUnixTime } from 'date-fns';\nimport { Row, Col } from 'antd';\nimport Products from '../../../../data/products.json';\nimport Pools from '../../../../data/pools.json';\nimport { explorer, uniswap_swap, uniswap_add } from '../../../../data/constants';\nimport { truncate } from '../../../../data/utils';\nimport { StakeTable, CirculatingSupply, TotalSupply, MarketCap, Price, Liquidity } from '../../../../components';\nimport \"./Product.scss\";\n\nimport { ReactComponent as IconClose } from '../../../../components/Assets/Images/icon_close.svg';\nimport { ReactComponent as IconInr } from '../../../../components/Assets/Images/icon_inr.svg';\nimport { ReactComponent as IconEs } from '../../../../components/Assets/Images/icon_es.svg';\nimport { ReactComponent as IconEi } from '../../../../components/Assets/Images/icon_ei.svg';\nimport { ReactComponent as IconGp } from '../../../../components/Assets/Images/icon_gp.svg';\nimport { ReactComponent as IconSp } from '../../../../components/Assets/Images/icon_sp.svg';\n\nconst RenderImage = (image) => {\n  switch(image) {\n    case \"INR\": return <IconInr className=\"StakeItem__icon\" />;\n    case \"GP\": return <IconGp className=\"StakeItem__icon\" />;\n    case \"ES\": return <IconEs className=\"StakeItem__icon\" />;\n    case \"EI\": return <IconEi className=\"StakeItem__icon\" />;\n    case \"SP\": return <IconSp className=\"StakeItem__icon\" />;\n    default: return <IconInr className=\"StakeItem__icon\" />;\n  }\n}\n\nconst ProductStat = ({ label, value }) => (\n  <div className=\"ProductStat\">\n    <p className=\"ProductStat__label\">{label}</p>\n    <p className=\"ProductStat__value\">{value}</p>\n  </div>\n)\n\nconst Product = ({ provider }) => {\n  let { productId } : { productId: string } = useParams();\n\n  const [productData, setProductData]: [any | null, any] = useState(null);\n  const [productDataLoading, setProductDataLoading]: [boolean, any] = useState(true);\n  const [poolData, setPoolData]: [any | null, any] = useState(null);\n  const [poolDataLoading, setPoolDataLoading]: [boolean, any] = useState(true);\n\n  useEffect(() => {\n    const productItem: any = Products.find(product => product.id === productId);\n    if (productItem) {\n      setProductData(productItem);\n      setProductDataLoading(false);      \n      const productPools = Pools.filter(pool => productItem.pools.includes(pool.id));\n      setPoolData(productPools);\n      setPoolDataLoading(false);\n    }\n\n  }, [productId]);\n\n  return (\n    <div className=\"Product\">\n      <div className=\"Product__container\">\n        <Link \n          to={`/lab/products`}\n          className=\"Product__close\"\n        >\n          <IconClose />\n        </Link>\n        <div className=\"Product__content\">\n        {productDataLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              <Row gutter={[16, 16]} className=\"Product__top\">\n                <Col lg={{ span: 24 }} className=\"Product__title\">\n                  <div className=\"Product__title__image\">\n                    {RenderImage(productData.image)}\n                  </div>\n                  <div className=\"Product__title__text\">\n                    <h3>{productData.projectName} ({productData.ticker})</h3>\n                    {productData.contract && \n                      <a \n                        href={`${explorer}contract/${productData.contract}`} \n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                      >\n                          {truncate(productData.contract, 18, '...')}\n                      </a>\n                    }\n                  </div>\n                </Col>\n                <Col lg={{ span: 24 }} className=\"Product__description\">\n                  <ul className=\"Product__list\">\n                    <li><span>Status</span> <span>{productData.status}</span></li>\n                    <li><span>Supply type</span> <span>{productData.supplyType}</span></li>\n                    <li><span>Start date</span> <span>{productData.startTime ? format(fromUnixTime(productData.startTime), 'P') : \"...\"}</span></li>                    \n                  </ul>\n                  <p>{productData.descriptionLong}</p>\n                </Col>\n              </Row>          \n              <Row gutter={[16, 16]}>\n                <Col lg={{ span: 12 }}>\n                  <ProductStat \n                    label={\"Total Supply\"}\n                    value={\n                      <TotalSupply contract={productData.contract} provider={provider} decimals={0} />\n                    }\n                  />\n                </Col>\n                <Col lg={{ span: 12 }}>\n                  <ProductStat \n                    label={\"Circulating Supply\"}\n                    value={\n                      !poolDataLoading && <CirculatingSupply \n                        contract={productData.contract}\n                        provider={provider}\n                        decimals={0}\n                        pools={poolData.filter(pool => pool.contract).map(pool => pool.contract)} \n                      />\n                    }\n                  />\n                </Col>\n                <Col lg={{ span: 12 }}>\n                  <ProductStat \n                    label={\"Liquidity\"}\n                    value={\n                      !poolDataLoading && <Liquidity \n                        decimals={2}\n                        prefix=\"US$\"\n                        pairId={productData.pairId}\n                      />\n                    }\n                  />\n                </Col>\n                <Col lg={{ span: 12 }}>\n                  <ProductStat \n                    label={\"Price\"}\n                    value={\n                      !poolDataLoading && <Price \n                        decimals={4}\n                        prefix=\"US$\"\n                        pairId={productData.pairId}\n                      />\n                    }\n                  />\n                </Col>\n                <Col lg={{ span: 12 }}>\n                  <ProductStat \n                    label={\"Market Cap\"}\n                    value={\n                      !poolDataLoading && <MarketCap \n                        contract={productData.contract}\n                        provider={provider}\n                        decimals={0}\n                        prefix=\"US$\"\n                        pools={poolData.filter(pool => pool.contract).map(pool => pool.contract)} \n                        pairId={productData.pairId}\n                      />\n                    } \n                  />\n                </Col>\n              </Row>\n              <Row gutter={[16, 16]}>\n                <Col lg={{ span: 24 }}>\n                  {poolDataLoading ? (\n                    <p>Loading...</p>\n                  ) : (\n                    <StakeTable provider={provider} data={poolData} size=\"small\" />\n                  )}\n                </Col>\n              </Row>\n              {productData.status === \"Active\" && \n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <a \n                      className=\"Btn Btn--secondary Product__action\"\n                      href={uniswap_swap(productData.pairToken, productData.contract)}\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      Get {productData.ticker}\n                    </a>\n                  </Col>\n                  <Col span={24}>\n                    <a \n                      className=\"Btn Btn--tertiary Product__action\"\n                      href={uniswap_add(productData.pairToken, productData.contract)}\n                      rel=\"noreferrer\"\n                      target=\"_blank\"\n                    >\n                      Add liquidity\n                    </a>\n                  </Col>\n                </Row>\n              }\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Product;"],"sourceRoot":""}