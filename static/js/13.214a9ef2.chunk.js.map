{"version":3,"sources":["components/Assets/Images/icon_close.svg","routes/Lab/Stake/StakeItem/StakeItem.tsx","routes/Lab/Stake/StakeView/PoolInput/PoolInput.tsx","routes/Lab/Stake/StakeView/StakeView.tsx","routes/Lab/Stake/Stake.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgIconClose","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","ForwardRef","PoolStatus","TokenType","PoolInput","React","forwardRef","action","placeholderText","balance","unit","loading","buttonText","useState","value","setValue","className","type","placeholder","onChange","event","onClick","undefined","formatUnits","disabled","WalletStat","label","token","StakeView","stakeView","tokenAddress","poolAddress","stakeToken","stakeRef","useRef","withdrawRef","useWeb3React","account","library","useSWR","fetcher","poolAbi","tokenBalance","data","getTokenBalance","mutate","stakeBalance","getStakeBalance","rewardBalance","getRewardBalance","useEffect","on","removeAllListeners","stakingLoading","setStakingLoading","withdrawLoading","setWithdrawLoading","claimLoading","setClaimLoading","claimUnstakeLoading","setClaimUnstakeLoading","a","tokenContract","Contract","erc20Abi","getSigner","poolContract","input","current","toStake","parseUnits","allowance","lt","approve","transaction","wait","stake","balanceOf","newTokenBal","newStakeBal","message","success","error","toWithdraw","unstake","console","log","withdrawRewards","estimatedRewards","newRewardBal","exit","span","gutter","lg","xs","displayType","thousandSeparator","decimalScale","formatEther","claimReward","claimRewardThenUnstake","RenderImage","image","StakeStat","StakeInstruction","receive","stakeTokenType","StakeItem","provider","poolId","useParams","setStakeView","poolData","setPoolData","poolDataLoading","setPoolDataLoading","injected","InjectedConnector","supportedChainIds","activate","active","poolItem","Pools","find","pool","to","poolName","status","contract","method","description","stakingToken","tokenType","href","uniswap_add","pairToken1","pairToken0","rel","name","rewardToken","address","decimals","reward","initial","subtract","style","marginTop","Group","defaultValue","size","e","Button","Stake","url","setProvider","ethers","providers","EtherscanProvider","network","initProvider","exact","path"],"mappings":"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","file":"static/js/13.214a9ef2.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M34.5200835,0.439276946 C30.2258633,4.80684561 25.9249751,9.18775035 21.5707425,13.6153314 C20.9972907,14.1954512 20.0771007,14.2021193 19.5036489,13.6153314 C15.1694205,9.21442253 10.8551962,4.82684974 6.53430381,0.439276946 C5.96085205,-0.14084286 5.04066201,-0.134174817 4.47387829,0.44594499 C3.42699542,1.52616808 2.40011668,2.59972312 1.33322968,3.69995034 C0.766445963,4.28673819 0.779782051,5.23360041 1.34656577,5.81372021 C5.55410138,10.0946043 9.87499373,14.4888451 14.2558985,18.9497664 C14.8293502,19.5298862 14.8226822,20.4700804 14.2558985,21.0568682 C9.90833395,25.4844493 5.57410551,29.8920262 1.27321729,34.2662629 C0.706433569,34.8463827 0.706433569,35.7865769 1.28655338,36.3600287 L4.47387829,39.5540216 C5.04733005,40.1274734 5.98085618,40.1274734 6.5476399,39.5473536 L19.4969809,26.3913032 C20.0704326,25.8111834 20.9906227,25.8111834 21.5640744,26.3913032 C25.8782987,30.778876 30.179187,35.1531127 34.5134154,39.5606897 C35.0868672,40.1408095 36.0137253,40.1474775 36.580509,39.5673577 C37.647396,38.4871346 38.6942788,37.4202476 39.7544978,36.3466926 C40.3279496,35.7665728 40.3279496,34.8197105 39.7611658,34.2395907 C35.5069539,29.9053623 31.1927296,25.5111215 26.8118249,21.0502002 C26.2383731,20.4700804 26.2383731,19.5232182 26.8118249,18.9430984 C31.1593894,14.5155173 35.4869498,10.1079404 39.78117,5.72703564 C40.3546217,5.14691584 40.3479537,4.20672167 39.7745019,3.62660186 L36.587177,0.419272815 C36.0203933,-0.147510904 35.0935352,-0.14084286 34.5200835,0.439276946 Z\"\n});\n\nfunction SvgIconClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 41,\n    height: 40,\n    viewBox: \"0 0 41 40\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconClose);\nexport default __webpack_public_path__ + \"static/media/icon_close.95e63c23.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from \"react-router-dom\";\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport NumberFormat from 'react-number-format';\nimport Pools from '../../../../data/pools.json';\nimport StakeView from '../StakeView/StakeView';\nimport { Balance, PoolClaimed, PoolDate } from '../../../../components';\nimport { uniswap_add } from '../../../../data/constants';\nimport { Row, Col, Radio } from 'antd';\n\nimport { ReactComponent as IconClose } from '../../../../components/Assets/Images/icon_close.svg';\nimport { ReactComponent as IconInr } from '../../../../components/Assets/Images/icon_inr.svg';\nimport { ReactComponent as IconEs } from '../../../../components/Assets/Images/icon_es.svg';\nimport { ReactComponent as IconEi } from '../../../../components/Assets/Images/icon_ei.svg';\nimport { ReactComponent as IconGp } from '../../../../components/Assets/Images/icon_gp.svg';\nimport { ReactComponent as IconSp } from '../../../../components/Assets/Images/icon_sp.svg';\n\nimport \"./StakeItem.scss\";\n\nenum PoolStatus {\n  'Active' = 'Active',\n  'Inactive' = 'Inactive',\n  'Finished' = 'Finished',\n}\n\nenum TokenType {\n  'liquidity' = 'liquidity tokens',\n  'token' = 'tokens',\n}\n\n\nconst RenderImage = (image) => {\n  switch(image) {\n    case \"INR\": return <IconInr className=\"StakeItem__icon\" />;\n    case \"GP\": return <IconGp className=\"StakeItem__icon\" />;\n    case \"ES\": return <IconEs className=\"StakeItem__icon\" />;\n    case \"EI\": return <IconEi className=\"StakeItem__icon\" />;\n    case \"SP\": return <IconSp className=\"StakeItem__icon\" />;\n    default: return <IconInr className=\"StakeItem__icon\" />;\n  }\n}\n\nconst StakeStat = ({ label, value }) => (\n  <div className=\"StakeStat\">\n    <p className=\"StakeStat__label\">{label}</p>\n    <p className=\"StakeStat__value\">{value}</p>\n  </div>\n)\n\nconst StakeInstruction = ({ stake, receive, stakeTokenType }) => (\n  <div className=\"StakeInstruction\">\n    <p className=\"StakeInstruction__title\">Instructions</p>\n    <ul className=\"StakeInstruction__steps\">\n      <li>Deposit {stake} {TokenType[stakeTokenType]}</li>\n      <li>Receive a continuous drip of {receive}</li>\n    </ul>\n  </div>\n)\n\n\nconst StakeItem = ({ provider }) => {\n  let { poolId } : { poolId: string } = useParams();\n  \n  const [stakeView, setStakeView]: [string, any] = useState('a');\n  const [poolData, setPoolData]: [any | null, any] = useState(null);\n  const [poolDataLoading, setPoolDataLoading]: [boolean, any] = useState(true);\n\n  const injected = new InjectedConnector({ supportedChainIds: [1, 3] });\n  const { activate, active } = useWeb3React();\n\n  useEffect(() => {\n    const poolItem = Pools.find(pool => pool.id === poolId);\n    if (poolItem) {\n      setPoolData(poolItem);\n      setPoolDataLoading(false);\n    }\n  }, [poolId]);\n\n  return (\n    <div className=\"StakeItem\">\n      <div className=\"StakeItem__container\">\n        <Link \n          to={`/lab/stake`}\n          className=\"StakeItem__close\"\n        >\n          <IconClose />\n        </Link>\n        <div className=\"StakeItem__content\">\n          {poolDataLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <>\n              <Row gutter={[16, 16]} className=\"StakeItem__top\">\n                <Col lg={{ span: 24 }} xs={{ span: 24 }} className=\"StakeItem__title\">\n                  {RenderImage(poolData.image)}<h3>{poolData.poolName}</h3>\n                </Col>\n                <Col lg={{ span: 24 }} xs={{ span: 24 }} className=\"StakeItem__description\">\n                  <ul className=\"StakeItem__list\">\n                    <li><span>Status</span> <span>{PoolStatus[poolData.status]}</span></li>\n                    <li><span>Start date</span> <PoolDate contract={poolData.contract} provider={provider} method={'startTime'} type={'date'} /></li>\n                    <li><span>Pool type</span> <span>{poolData.type}</span></li>\n                    <li><span>Period</span> <PoolDate contract={poolData.contract} provider={provider} method={'periodDuration'} type={'duration'} /></li>\n                    <li><span>Next reward</span> <PoolDate contract={poolData.contract} provider={provider} method={'periodFinishTime'} type={'distance'} /></li>\n                  </ul>\n                  <p>{poolData.description}</p>\n                </Col>\n              </Row>          \n              <Row gutter={[16, 16]}>\n                <Col lg={{ span: 24 }} xs={{ span: 24 }}>\n                  <StakeInstruction \n                    stake={\n                      poolData.stakingToken.tokenType === 'liquidity'\n                      ? <a \n                          href={uniswap_add(poolData.stakingToken.pairToken1, poolData.stakingToken.pairToken0)}\n                          rel=\"noreferrer\" target=\"_blank\"\n                        >\n                          {poolData.stakingToken.name}\n                        </a>\n                      : <Link to={`/lab/products/${poolData.stakingToken.name}`}>{poolData.stakingToken.name}</Link>\n                    }\n                    receive={<Link to={`/lab/products/${poolData.rewardToken.name}`}>{poolData.rewardToken.name}</Link>}\n                    stakeTokenType={poolData.stakingToken.tokenType}\n                  />\n                </Col>\n                <Col lg={{ span: 12 }} xs={{ span: 24 }}>\n                  <StakeStat \n                    label={\"Remaining\"}\n                    value={\n                      <>\n                        <Balance contract={poolData.rewardToken.contract} address={poolData.contract} provider={provider} decimals={0} />\n                        {\"/\"}\n                        <NumberFormat\n                          value={poolData.reward.initial} \n                          displayType={'text'} \n                          thousandSeparator={true} \n                          decimalScale={0} \n                        />\n                        {\" \"}\n                        {poolData.rewardToken.name} \n                      </>\n                    }\n                  />\n                </Col>\n                <Col lg={{ span: 12 }} xs={{ span: 24 }}>\n                  <StakeStat \n                    label={\"Claimed\"}\n                    value={\n                      <>\n                        <PoolClaimed contract={poolData.rewardToken.contract} address={poolData.contract} provider={provider} decimals={0} subtract={poolData.reward.initial} />\n                        {\"/\"}\n                        <NumberFormat\n                          value={poolData.reward.initial} \n                          displayType={'text'} \n                          thousandSeparator={true} \n                          decimalScale={0} \n                        />\n                        {\" \"}\n                        {poolData.rewardToken.name} \n                      </>\n                    }\n                  />\n                </Col>\n              </Row>\n              <Row gutter={[16, 16]} style={{ marginTop: \"1rem\" }}>\n                <Col span={24} className=\"StakeItem__radioContainer\">\n                  <Radio.Group defaultValue=\"a\" size=\"large\" onChange={(e) => setStakeView(e.target.value)}>\n                    <Radio.Button value=\"a\">Stake</Radio.Button>\n                    <Radio.Button value=\"b\">Claim</Radio.Button>\n                    <Radio.Button value=\"c\">Unstake</Radio.Button>\n                    <Radio.Button value=\"d\">Claim &amp; Unstake</Radio.Button>\n                  </Radio.Group>\n                </Col>\n                {active ? (\n                  <StakeView stakeView={stakeView} tokenAddress={poolData.stakingToken.contract} poolAddress={poolData.contract} stakeToken={poolData.stakingToken.name} />\n                ) : (\n                  <Col span={24}>\n                    <div className=\"StakeItem__connect\">\n                      <p>Connect MetaMask to interact with pool</p>\n                      <button className=\"Btn Btn--secondary\" onClick={() => activate(injected)}>\n                        Connect to metamask\n                      </button>\n                    </div>\n                  </Col>\n                )}\n              </Row>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default StakeItem;","import { formatUnits } from 'ethers/lib/utils';\nimport React, { useState } from 'react';\nimport './PoolInput.scss';\n\nconst PoolInput = React.forwardRef(({ action, placeholderText, balance, unit, loading, buttonText }: any, ref: any) => {\n\tconst [value, setValue] = useState('');\n\n\treturn (\n    <div className=\"PoolInput\">\n      <div className=\"PoolInput__control\">\n        <input\n          ref={ref}\n          className=\"PoolInput__input\"\n          type=\"text\"\n          value={value}\n          placeholder={placeholderText}\n          onChange={(event) => setValue(event.target.value)}\n        />\n        <button className=\"PoolInput__control__button\" onClick={() => {\n          if ( balance === undefined ) setValue(\"0\");\n          if ( balance !== undefined) setValue(formatUnits(balance, unit));\n        }}>\n          Max\n        </button>\n      </div>\n      <button\n        className={\n          loading ? (\n            'Btn Btn--primary PoolInput__action'\n          ) : (\n              'Btn Btn--secondary PoolInput__action'\n            )\n        }\n        disabled={loading}\n        onClick={action}\n      >\n        {loading ? \"Loading...\" : buttonText}\n      </button>\n\t\t</div>\n\t);\n});\n\nexport default PoolInput;","import React, { useState, useEffect, useRef } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport useSWR from 'swr';\nimport { fetcher } from '../../../../data/utils';\nimport { poolAbi, erc20Abi } from '../../../../data/constants';\nimport NumberFormat from 'react-number-format';\nimport { Contract } from 'ethers';\nimport { formatEther, formatUnits, parseUnits } from 'ethers/lib/utils';\nimport { Col, Row, message } from 'antd';\nimport PoolInput from './PoolInput/PoolInput';\nimport \"./StakeView.scss\";\n\nconst WalletStat = ({ label, value, token }) => (\n  <div className=\"WalletStat\">\n    <p className=\"WalletStat__label\">{label}</p>\n    <p className=\"WalletStat__value\">{value} <span className=\"WalletStat__token\">{token}</span></p>\n  </div>\n)\n\nconst StakeView = ({ stakeView, tokenAddress, poolAddress, stakeToken }) => {\n  const stakeRef = useRef<HTMLInputElement>();\n\tconst withdrawRef = useRef<HTMLInputElement>();\n\n  const { account, library } = useWeb3React();\n\n\tconst { data: tokenBalance, mutate: getTokenBalance } = useSWR([ tokenAddress, 'balanceOf', account ], {\n\t\tfetcher: fetcher(library, poolAbi)\n  });\n  \n  const { data: stakeBalance, mutate: getStakeBalance } = useSWR([ poolAddress, 'balanceOf', account ], {\n\t\tfetcher: fetcher(library, poolAbi)\n  });\n  \n  const { data: rewardBalance, mutate: getRewardBalance } = useSWR([ poolAddress, 'estimatedRewards' ], {\n\t\tfetcher: fetcher(library, poolAbi)\n  });\n\n  useEffect(\n\t\t() => {\n\t\t\tlibrary.on('block', () => {\n        getTokenBalance(undefined, true);\n        getStakeBalance(undefined, true);\n        getRewardBalance(undefined, true);\n\t\t\t});\n\t\t\treturn () => {\n\t\t\t\tlibrary.removeAllListeners('block');\n\t\t\t};\n\t\t},\n\t\t[ library, getTokenBalance, getStakeBalance, getRewardBalance ]\n  );\n\n  const [ stakingLoading, setStakingLoading ] = useState(false);\n\tconst [ withdrawLoading, setWithdrawLoading ] = useState(false);\n\tconst [ claimLoading, setClaimLoading ] = useState(false);\n\tconst [ claimUnstakeLoading, setClaimUnstakeLoading ] = useState(false);\n\n  \n  async function handleStake() {\n\t\tsetStakingLoading(true);\n\t\tconst tokenContract = new Contract(tokenAddress, erc20Abi, library.getSigner());\n\t\tconst poolContract = new Contract(poolAddress, poolAbi, library.getSigner());\n\t\ttry {\n      const input = stakeRef.current;\n      const toStake = input ? parseUnits(input.value, 18) : 0;\n\t\t\tlet allowance = await tokenContract.allowance(account, poolAddress);\n\t\t\tlet transaction;\n\t\t\tif (allowance.lt(toStake)) {\n\t\t\t\ttransaction = await tokenContract.approve(poolAddress, toStake);\n\t\t\t\tawait transaction.wait(1);\n\t\t\t}\n\t\t\ttransaction = await poolContract.stake(toStake);\n\t\t\tawait transaction.wait(1);\n\n\t\t\tlet newTokenBal = await tokenContract.balanceOf(account);\n\t\t\tlet newStakeBal = await poolContract.balanceOf(account);\n\n\t\t\tawait getStakeBalance(newStakeBal);\n\t\t\tawait getTokenBalance(newTokenBal);\n\n\t\t\tmessage.success('Staking successfully executed');\n\t\t} catch (error) {\n\t\t\tmessage.error('Staking failed, please try again');\n\t\t}\n\t\tsetStakingLoading(false);\n  }\n  \n  async function handleWithdraw() {\n\t\tsetWithdrawLoading(true);\n\t\tconst tokenContract = new Contract(tokenAddress, erc20Abi, library.getSigner());\n\t\tconst poolContract = new Contract(poolAddress, poolAbi, library.getSigner());\n\t\ttry {\n      const input = withdrawRef.current;\n\t\t\tconst toWithdraw = input ? parseUnits(input.value, 18) : 0;\n\t\t\tlet transaction = await poolContract.unstake(toWithdraw);\n\t\t\tawait transaction.wait(1);\n\n\t\t\tlet newTokenBal = await tokenContract.balanceOf(account);\n\t\t\tlet newStakeBal = await poolContract.balanceOf(account);\n\t\t\tawait getTokenBalance(newTokenBal);\n\t\t\tawait getStakeBalance(newStakeBal);\n\n\t\t\tmessage.success('Unstake successfully executed');\n\t\t} catch (error) {\n      console.log(error)\n\t\t\tmessage.error('Unstake failed, please try again');\n\t\t}\n\t\tsetWithdrawLoading(false);\n  }\n  \n  async function claimReward() {\n\t\tsetClaimLoading(true);\n\t\tconst poolContract = new Contract(poolAddress, poolAbi, library.getSigner());\n\t\ttry {\n\t\t\tconst transaction = await poolContract.withdrawRewards();\n\t\t\tawait transaction.wait(1);\n\n\t\t\tlet newRewardBal = await poolContract.estimatedRewards(account);\n\t\t\tawait getRewardBalance(newRewardBal);\n\n\t\t\tmessage.success('Claim reward successful');\n\t\t} catch (error) {\n\t\t\tmessage.error('Claim reward failed, please try again');\n\t\t}\n\t\tsetClaimLoading(false);\n\t}\n\n\tasync function claimRewardThenUnstake() {\n\t\tsetClaimUnstakeLoading(true);\n\t\tconst poolContract = new Contract(poolAddress, poolAbi, library.getSigner());\n\t\tconst tokenContract = new Contract(tokenAddress, erc20Abi, library.getSigner());\n\n\t\ttry {\n\t\t\tconst transaction = await poolContract.exit();\n\t\t\tawait transaction.wait(1);\n\n\t\t\tlet newTokenBal = await tokenContract.balanceOf(account);\n\t\t\tlet newStakeBal = await poolContract.balanceOf(account);\n\t\t\tlet newRewardBal = await poolContract.estimatedRewards(account);\n\n\t\t\tawait getStakeBalance(newStakeBal);\n\t\t\tawait getTokenBalance(newTokenBal);\n\t\t\tawait getRewardBalance(newRewardBal);\n\n\t\t\tmessage.success('Claim and unstake successfully executed');\n\t\t} catch (error) {\n      console.log(error)\n\t\t\tmessage.error('Claim and unstake failed, please try again');\n\t\t}\n\t\tsetClaimUnstakeLoading(false);\n  }\n\n  switch (stakeView) {\n    case 'a': return (\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col lg={{ span: 12 }} xs={{ span: 24}}>\n            <WalletStat \n              label={\"Currently staked\"}\n              value={\n                <NumberFormat\n                  value={stakeBalance !== undefined ? formatUnits(stakeBalance, 18) : 0} \n                  displayType={'text'} \n                  thousandSeparator={true} \n                  decimalScale={6}\n                />\n              }\n              token={stakeToken}\n            />\n          </Col>\n          <Col lg={{ span: 12 }} xs={{ span: 24}}>\n            <WalletStat \n              label={\"Wallet balance\"}\n              value={\n                <NumberFormat\n                  value={tokenBalance !== undefined ? formatUnits(tokenBalance, 18) : 0} \n                  displayType={'text'} \n                  thousandSeparator={true} \n                  decimalScale={6}\n                />\n              }\n              token={stakeToken}\n            />\n          </Col>\n        </Row>\n        <PoolInput\n          action={handleStake}\n          loading={stakingLoading}\n          buttonText=\"Stake\"\n          ref={stakeRef}\n          balance={tokenBalance}\n          placeholderText=\"Enter stake amount\"\n          unit={18}\n        />\n      </Col>\n    )\n    case 'b': return (\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col lg={{ span: 12 }} xs={{ span: 24}}>\n            <WalletStat \n              label={\"Rewards available\"}\n              value={\n                <NumberFormat\n                  value={rewardBalance !== undefined ? formatEther(rewardBalance) : 0}\n                  displayType={'text'} \n                  thousandSeparator={true} \n                  decimalScale={6}\n                />\n              }\n              token={stakeToken}\n            />\n          </Col>\n        </Row>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <button \n              className={\n                claimLoading ? (\n                  'Btn Btn--primary StakeView__action'\n                ) : (\n                  'Btn Btn--secondary StakeView__action'\n                )\n              }\n              onClick={() => !claimLoading && claimReward()}\n              disabled={claimLoading}\n            >\n              {!claimLoading ? \"Claim\" : \"Loading...\"}\n            </button>\n          </Col>\n        </Row>\n      </Col>\n    )\n    case 'c': return (\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col lg={{ span: 12 }} xs={{ span: 24}}>\n            <WalletStat \n              label={\"Currently staked\"}\n              value={\n                <NumberFormat\n                  value={stakeBalance !== undefined ? formatUnits(stakeBalance, 18) : 0} \n                  displayType={'text'} \n                  thousandSeparator={true} \n                  decimalScale={6}\n                />\n              }\n              token={stakeToken}\n            />\n          </Col>\n        </Row>\n        <PoolInput\n          action={handleWithdraw}\n          loading={withdrawLoading}\n          buttonText=\"Unstake\"\n          ref={withdrawRef}\n          balance={stakeBalance}\n          placeholderText=\"Unstake Amount\"\n          unit={18}\n        />\n      </Col>\n    )\n    case 'd': return (\n        <Col span={24}>\n          <Row gutter={[16, 16]}>\n            <Col lg={{ span: 12 }} xs={{ span: 24}}>\n              <WalletStat \n                label={\"Currently staked\"}\n                value={\n                  <NumberFormat\n                    value={stakeBalance !== undefined ? formatUnits(stakeBalance, 18) : 0} \n                    displayType={'text'} \n                    thousandSeparator={true} \n                    decimalScale={8}\n                  />\n                }\n                token={stakeToken}\n              />\n            </Col>\n            <Col lg={{ span: 12 }} xs={{ span: 24}}>\n              <WalletStat \n                label={\"Rewards available\"}\n                value={\n                  <NumberFormat\n                    value={rewardBalance !== undefined ? formatEther(rewardBalance) : 0}\n                    displayType={'text'} \n                    thousandSeparator={true} \n                    decimalScale={8}\n                  />\n                }\n                token={stakeToken}\n              />\n            </Col>\n          </Row>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <button \n                className={\n                  claimUnstakeLoading ? (\n                    'Btn Btn--primary StakeView__action'\n                  ) : (\n                    'Btn Btn--secondary StakeView__action'\n                  )\n                }\n                onClick={() => !claimUnstakeLoading && claimRewardThenUnstake()}\n                disabled={claimUnstakeLoading}\n              >\n                {!claimUnstakeLoading ? <>Claim &amp; Unstake</> : \"Loading...\"}\n              </button>\n            </Col>\n          </Row>\n        </Col>\n        \n    )\n    default: return null\n  }\n}\n\nexport default StakeView;","import React, { useState, useEffect } from 'react';\nimport { Route } from \"react-router-dom\";\nimport { ethers } from 'ethers';\nimport { network } from '../../../data/constants';\nimport { StakeTable } from '../../../components';\nimport StakeItem from './StakeItem/StakeItem';\n\nimport Pools from '../../../data/pools.json';\nimport \"./Stake.scss\";\n\nconst Stake = ({ url }) => {\n  const [provider, setProvider]: [any | null, any] = useState(null);\n\n  useEffect(() => {\n\t\tasync function initProvider() {\n\t\t\tconst provider = new ethers.providers.EtherscanProvider(network, 'WSEBKEYQAFZ8AUGMFAKJR7GPCNYZ9Q3AIE');\n\t\t\tsetProvider(provider);\n\t\t}\n\t\tinitProvider();\n  }, []);\n\n  return (\n    <div className=\"Stake\">\n      <h2 className=\"Stake__title\">Stake</h2>\n      <StakeTable provider={provider} data={Pools} size=\"large\" />\n      <Route exact path={`${url}/stake/:poolId`}>\n       {provider && <StakeItem provider={provider} /> }\n      </Route>\n    </div>\n  );\n}\n\nexport default Stake;"],"sourceRoot":""}